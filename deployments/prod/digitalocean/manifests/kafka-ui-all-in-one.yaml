---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  labels:
    app.kubernetes.io/instance: kafka-ui
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/service: kafka-ui
  namespace: strimzi
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-name: "kafka-ui"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-region: "sgp1"
    service.beta.kubernetes.io/do-loadbalancer-forwarding-rules: "entry_protocol:http,entry_port:80,target_protocol:http,target_port:8080"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: kafka-ui
    app.kubernetes.io/instance: kafka-ui
    app.kubernetes.io/name: kafka-ui

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  labels:
    app.kubernetes.io/component: kafka-ui
    app.kubernetes.io/instance: kafka-ui
    app.kubernetes.io/name: kafka-ui
  namespace: strimzi
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-ui
      app.kubernetes.io/name: kafka-ui
      app.kubernetes.io/instance: kafka-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/component: kafka-ui
        app.kubernetes.io/instance: kafka-ui
        app.kubernetes.io/name: kafka-ui
    spec:
      enableServiceLinks: false
      serviceAccountName: default
      automountServiceAccountToken: true

      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 10000
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst

      containers:
        - env:
          - name: DYNAMIC_CONFIG_ENABLED
            value: "true"

          - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
            value: kafka-c6c8-kafka-bootstrap.strimzi.svc.cluster.local:9092

          - name: KAFKA_CLUSTERS_0_NAME
            value: kafka-c6c8

          image: provectuslabs/kafka-ui:latest

          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1

          name: kafka-ui

          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1

          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 10m

          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true

          volumeMounts:
          - mountPath: /tmp
            name: tmp

      volumes:
        - emptyDir: {}
          name: tmp
